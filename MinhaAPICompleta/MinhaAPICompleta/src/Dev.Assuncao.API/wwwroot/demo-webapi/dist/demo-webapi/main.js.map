{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/base/baseService.ts","webpack:///./src/app/base/menu/menu.component.html","webpack:///./src/app/base/menu/menu.component.ts","webpack:///./src/app/produtos/cadastro/cadastro.component.html","webpack:///./src/app/produtos/cadastro/cadastro.component.ts","webpack:///./src/app/produtos/lista/lista.component.html","webpack:///./src/app/produtos/lista/lista.component.ts","webpack:///./src/app/produtos/services/produtoService.ts","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/menu/menu.user.component.html","webpack:///./src/app/user/menu/menu.user.component.ts","webpack:///./src/app/user/userService.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CadastroComponent } from './produtos/cadastro/cadastro.component';\nimport { ListaComponent } from './produtos/lista/lista.component';\nimport { LoginComponent } from './user/login/login.component';\n\nconst routes: Routes = [\n  {path: '', component: LoginComponent },\n  {path: 'cadastro-produtos', component: CadastroComponent },\n  {path: 'lista-produtos', component: ListaComponent },\n  {path: 'login', component: LoginComponent }  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<html>\\n\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <title>Novo Produto - DevIO.App</title>\\n\\n\\n  <link href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\"\\n    integrity=\\\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\\\" crossorigin=\\\"anonymous\\\">\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://use.fontawesome.com/releases/v5.8.2/css/all.css\\\"\\n    integrity=\\\"sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay\\\" crossorigin=\\\"anonymous\\\">\\n\\n</head>\\n\\n<body>\\n  <app-menu></app-menu>\\n  \\n  <div class=\\\"container\\\" style=\\\"min-height: 800px\\\">\\n    <main role=\\\"main\\\" class=\\\"pb-3\\\">\\n\\n      <router-outlet></router-outlet>\\n\\n    </main>\\n  </div>\\n\\n  <footer class=\\\"border-top footer text-muted\\\">\\n    <div class=\\\"container\\\">\\n      © 2019 - Minha App MVC - <a href=\\\"mailto:contato@meudomain.com\\\">contato@meudomain.com</a> - <a\\n        href=\\\"mailto:suporte@desenvolvedor.io\\\">suporte@desenvolvedor.io</a>\\n    </div>\\n  </footer>\\n\\n</body>\\n\\n</html>\"","import { Component, OnInit, AfterContentInit, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\n\nexport class AppComponent {\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CadastroComponent } from './produtos/cadastro/cadastro.component';\nimport { ProdutoService } from './produtos/services/produtoService';\nimport { ListaComponent } from './produtos/lista/lista.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { UserService } from './user/userService';\nimport { MenuUserComponent } from './user/menu/menu.user.component';\nimport { MenuComponent } from './base/menu/menu.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CadastroComponent,\n    ListaComponent,\n    LoginComponent,\n    MenuUserComponent,\n    MenuComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    ProdutoService,\n    UserService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\n\r\nexport abstract class BaseService {\r\n\r\n    protected UrlServiceV1: string = \"https://localhost:44320/api/\";\r\n    //protected UrlServiceV1: string = \"https://devioapi.azurewebsites.net/api/v1/\";\r\n\r\n    protected ObterHeaderFormData() {\r\n        return {\r\n            headers: new HttpHeaders({\r\n                'Content-Disposition': 'form-data; name=\"produto\"',\r\n                'Authorization': `Bearer ${this.obterTokenUsuario()}`\r\n            })\r\n        };\r\n    }\r\n\r\n    protected ObterHeaderJson() {\r\n        return {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n    }\r\n\r\n    protected ObterAuthHeaderJson(){\r\n        return {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${this.obterTokenUsuario()}`\r\n            })\r\n        };\r\n    }\r\n\r\n    protected extractData(response: any) {\r\n        return response.data || {};\r\n    }\r\n\r\n    public obterUsuario() {\r\n        return JSON.parse(localStorage.getItem('app.user'));\r\n    }\r\n\r\n    protected obterTokenUsuario(): string {\r\n        return localStorage.getItem('app.token');\r\n    }\r\n\r\n    protected serviceError(error: Response | any) {\r\n        let errMsg: string;\r\n\r\n        if (error instanceof Response) {\r\n\r\n            errMsg = `${error.status} - ${error.statusText || ''}`;\r\n        }\r\n        else {\r\n            errMsg = error.message ? error.message : error.toString();\r\n        }\r\n\r\n        console.error(errMsg);\r\n        return throwError(errMsg);\r\n    }\r\n}","module.exports = \"<header>\\n    <nav class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\">\\n      <div class=\\\"container\\\">\\n        <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/lista-produtos']\\\">DevIO.App</a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\"\\n          aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\">\\n          <app-menu-user></app-menu-user>\\n          <ul class=\\\"navbar-nav flex-grow-1\\\">\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/cadastro-produtos']\\\">Cadastro Produtos</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/lista-produtos']\\\">Lista Produtos</a>\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n    </nav>\\n  </header>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html'\n})\nexport class MenuComponent{\n\n}\n","module.exports = \"<h3 style=\\\"padding-top: 50px\\\">Novo Produto </h3>\\n\\n<hr>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-10\\\">\\n    <form enctype=\\\"multipart/form-data\\\" (ngSubmit)=\\\"cadastrarProduto()\\\" [formGroup]=\\\"produtoForm\\\">\\n\\n\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errors.length > 0\\\">\\n        <h3 id=\\\"msgRetorno\\\">Opa! Alguma coisa não deu certo:</h3>\\n        <ul>\\n          <li *ngFor=\\\"let error of errors\\\">{{ error }}</li>\\n        </ul>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"FornecedorId\\\">Fornecedor</label>\\n        <select class=\\\"form-control\\\" data-val=\\\"true\\\" formControlName=\\\"fornecedorId\\\"\\n          data-val-required=\\\"O campo Fornecedor é obrigatório\\\" id=\\\"FornecedorId\\\" name=\\\"FornecedorId\\\">\\n          <option></option>\\n          <option *ngFor='let fornecedor of fornecedores' value=\\\"{{ fornecedor.id }}\\\">{{ fornecedor.nome }}</option>\\n        </select>\\n\\n        <span class=\\\"text-danger field-validation-valid\\\" data-valmsg-for=\\\"FornecedorId\\\"\\n          data-valmsg-replace=\\\"true\\\"></span>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"Nome\\\">Nome</label>\\n        <input formControlName=\\\"nome\\\" class=\\\"form-control\\\" type=\\\"text\\\" data-val=\\\"true\\\"\\n          data-val-length=\\\"O campo Nome precisa ter entre 2 e 200 caracteres\\\" data-val-length-max=\\\"200\\\"\\n          data-val-length-min=\\\"2\\\" data-val-required=\\\"O campo Nome é obrigatório\\\" id=\\\"Nome\\\" maxlength=\\\"200\\\" name=\\\"Nome\\\"\\n          value=\\\"\\\">\\n        <span class=\\\"text-danger field-validation-valid\\\" data-valmsg-for=\\\"Nome\\\" data-valmsg-replace=\\\"true\\\"></span>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"Descricao\\\">Descrição</label>\\n        <textarea formControlName=\\\"descricao\\\" cols=\\\"40\\\" rows=\\\"5\\\" class=\\\"form-control\\\" data-val=\\\"true\\\"\\n          data-val-length=\\\"O campo Descrição precisa ter entre 2 e 1000 caracteres\\\" data-val-length-max=\\\"1000\\\"\\n          data-val-length-min=\\\"2\\\" data-val-required=\\\"O campo Descrição é obrigatório\\\" id=\\\"Descricao\\\" maxlength=\\\"1000\\\"\\n          name=\\\"Descricao\\\"></textarea>\\n        <span class=\\\"text-danger field-validation-valid\\\" data-valmsg-for=\\\"Descricao\\\" data-valmsg-replace=\\\"true\\\"></span>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"ImagemUpload\\\">Imagem do Produto</label>\\n\\n        <div class=\\\"custom-file\\\">\\n          <input accept=\\\"image/jpeg\\\" #fileInput (change)=\\\"upload(fileInput.files)\\\" formControlName=\\\"imagemUpload\\\"\\n            type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"ImagemUpload\\\" name=\\\"ImagemUpload\\\" data-val=\\\"true\\\"\\n            data-val-required=\\\"Preencha o campo Imagem\\\">\\n          <label data-browse=\\\"Procurar\\\" style=\\\"width: 400px\\\" class=\\\"custom-file-label\\\" for=\\\"ImagemUpload\\\"></label>\\n          <label *ngIf=\\\"imagemNome\\\" id=\\\"img_nome\\\">{{imagemNome}}</label>\\n        </div>\\n\\n        <span class=\\\"text-danger field-validation-valid\\\" data-valmsg-for=\\\"ImagemUpload\\\"\\n          data-valmsg-replace=\\\"true\\\"></span>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"Valor\\\">Valor</label>\\n        <input formControlName=\\\"valor\\\" class=\\\"form-control\\\" type=\\\"text\\\" data-val=\\\"true\\\"\\n          data-val-moeda=\\\"Moeda em formato inválido\\\" data-val-number=\\\"Moeda em formato inválido\\\"\\n          data-val-required=\\\"O campo Valor é obrigatório\\\" id=\\\"Valor\\\" name=\\\"Valor\\\" value=\\\"0,00\\\">\\n        <span class=\\\"text-danger field-validation-valid\\\" data-valmsg-for=\\\"Valor\\\" data-valmsg-replace=\\\"true\\\"></span>\\n      </div>\\n      <div class=\\\"form-group form-check\\\">\\n        <label class=\\\"form-check-label\\\">\\n          <input formControlName=\\\"ativo\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" data-val=\\\"true\\\"\\n            data-val-required=\\\"The Ativo? field is required.\\\" id=\\\"Ativo\\\" name=\\\"Ativo\\\" value=\\\"true\\\"> Ativo?\\n        </label>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"submit\\\" value=\\\"Cadastrar\\\" class=\\\"btn btn-primary\\\">\\n        <a class=\\\"btn btn-info\\\" [routerLink]=\\\"['/lista-produtos']\\\">Voltar</a>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\n\nimport { Produto } from '../models/Produto';\nimport { Fornecedor } from '../models/Fornecedor';\nimport { ProdutoService } from '../services/produtoService';\n\n@Component({\n  selector: 'app-cadastro',\n  templateUrl: './cadastro.component.html'\n})\nexport class CadastroComponent implements OnInit {\n\n  produtoForm: FormGroup;\n  produto: Produto;\n  errors: any[] = [];\n  fornecedores: Fornecedor[];\n  imagemForm: any;\n  imagemNome: string;\n  imageBase64: any;\n\n  constructor(private fb: FormBuilder,\n              private router: Router,\n              private produtoService: ProdutoService) {\n\n    this.produtoService.obterFornecedores()\n      .subscribe(\n        fornecedores => this.fornecedores = fornecedores,\n        fail => this.errors = fail.error.errors\n      );\n\n    this.imagemForm = new FormData();\n  }\n\n  ngOnInit(): void {\n\n    this.produtoForm = this.fb.group({\n      fornecedorId: '',\n      nome: '',\n      descricao: '',\n      imagemUpload: '',\n      imagem: '',\n      valor: '0',\n      ativo: new FormControl(false),\n      nomeFornecedor: ''\n    });\n  }\n\n  cadastrarProduto() {\n    if (this.produtoForm.valid && this.produtoForm.dirty) {\n\n      let produtoForm = Object.assign({}, this.produto, this.produtoForm.value);\n      produtoForm.ativo = this.produtoForm.get('ativo').value\n\n      this.produtoHandle(produtoForm)\n        .subscribe(\n          result => { this.onSaveComplete(result) },\n          fail => { this.onError(fail) }\n        );\n    }\n  }\n\n  onSaveComplete(response: any) {\n    this.router.navigate(['/lista-produtos']);\n  }\n\n  onError(fail: any) {\n    this.errors = fail.error.errors;\n  }\n\n  produtoHandleAlternativo(produto: Produto): Observable<Produto> {\n\n    let formdata = new FormData();\n    produto.imagem = this.imagemNome;\n    produto.imagemUpload = null;\n\n    formdata.append('produto', JSON.stringify(produto));\n    formdata.append('ImagemUpload', this.imagemForm, this.imagemNome);\n\n    return this.produtoService.registrarProdutoAlternativo(formdata);\n  }\n\n  produtoHandle(produto: Produto): Observable<Produto> {\n\n    produto.imagemUpload = this.imageBase64;\n    produto.imagem = this.imagemNome;\n\n    return this.produtoService.registrarProduto(produto);\n  }\n\n  upload(file: any) {\n    // necessario para upload via IformFile\n    this.imagemForm = file[0];\n    this.imagemNome = file[0].name;\n\n    // necessario para upload via base64\n    var reader = new FileReader();\n    reader.onload = this.manipularReader.bind(this);\n    reader.readAsBinaryString(file[0]);\n  }\n\n  manipularReader(readerEvt: any) {\n    var binaryString = readerEvt.target.result;\n    this.imageBase64 = btoa(binaryString);\n  } \n}\n\n\n","module.exports = \"<main role=\\\"main\\\" class=\\\"pb-3\\\">\\n\\n\\n  <h1>Lista de Produtos</h1>\\n  <hr>\\n\\n  <p>\\n    <a class=\\\"btn btn-info\\\" [routerLink]=\\\"['/cadastro-produtos']\\\">Novo Produto</a>\\n  </p>\\n\\n  <table class=\\\"table table-hover\\\">\\n    <thead class=\\\"thead-dark\\\">\\n      <tr>\\n        <th></th>\\n        <th>Nome</th>\\n        <th>Fornecedor</th>\\n        <th>Valor</th>\\n        <th>Ativo?</th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor='let produto of produtos'>\\n        <td>\\n          <img src=\\\"assets/{{ produto.imagem }}\\\" title=\\\"{{ produto.nome }}\\\" alt=\\\"{{ produto.imagem }}\\\" style=\\\"width: 70px; height: 100px\\\">\\n        </td>\\n        <td>\\n          {{ produto.nome }}\\n        </td>\\n        <td>\\n          {{ produto.nomeFornecedor }}\\n        </td>\\n        <td>\\n          {{ produto.valor | currency:'BRL':symbol:'1.2-2' }}\\n        </td>\\n        <td>\\n          <input class=\\\"check-box\\\" [checked]=\\\"produto.ativo === true\\\" type=\\\"checkbox\\\">\\n        </td>\\n        <td class=\\\"text-right\\\">\\n          <a class=\\\"btn btn-warning\\\" href=\\\"#\\\">\\n            <span class=\\\"fa fa-search\\\"></span>\\n          </a>\\n          <a class=\\\"btn btn-info\\\" href=\\\"#\\\">\\n            <span class=\\\"fa fa-pencil-alt\\\"></span>\\n          </a>\\n          <a class=\\\"btn btn-danger\\\" href=\\\"#\\\">\\n            <span class=\\\"fa fa-trash\\\"></span>\\n          </a>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n\\n</main>\"","import { Component, OnInit } from '@angular/core';\nimport { ProdutoService } from '../services/produtoService';\nimport { Produto } from '../models/Produto';\n\n@Component({\n  selector: 'app-lista',\n  templateUrl: './lista.component.html'\n})\nexport class ListaComponent implements OnInit {\n\n  constructor(private produtoService: ProdutoService) { }\n\n  public produtos: Produto[];\n  public imageURL: string;\n  errorMessage: string;\n\n  ngOnInit() {\n    this.produtoService.obterTodos()\n      .subscribe(\n        produtos => this.produtos = produtos,\n        error => this.errorMessage = error,\n    );   \n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { Fornecedor } from '../models/Fornecedor';\r\nimport { Produto } from '../models/Produto';\r\nimport { BaseService } from 'src/app/base/baseService';\r\n\r\n@Injectable()\r\nexport class ProdutoService extends BaseService {\r\n    constructor(private http: HttpClient) { super() }\r\n\r\n    obterTodos(): Observable<Produto[]> {\r\n        return this.http\r\n            .get<Produto[]>(this.UrlServiceV1 + \"produtos\", super.ObterAuthHeaderJson())\r\n            .pipe(\r\n                catchError(this.serviceError));\r\n    }\r\n\r\n    registrarProdutoAlternativo(produto: FormData): Observable<Produto> {\r\n\r\n        return this.http\r\n            .post(this.UrlServiceV1 + 'produtos/adicionar', produto, super.ObterHeaderFormData())\r\n            .pipe(\r\n                map(super.extractData),\r\n                catchError(super.serviceError)\r\n            );\r\n    }\r\n\r\n    registrarProduto(produto: Produto): Observable<Produto> {\r\n\r\n        return this.http\r\n            .post(this.UrlServiceV1 + 'produtos', produto, super.ObterAuthHeaderJson())\r\n            .pipe(\r\n                map(super.extractData),\r\n                catchError(super.serviceError)\r\n            );\r\n    }\r\n\r\n    obterFornecedores(): Observable<Fornecedor[]> {\r\n        return this.http\r\n            .get<Fornecedor[]>(this.UrlServiceV1 + 'fornecedores', super.ObterAuthHeaderJson())\r\n            .pipe(\r\n                catchError(super.serviceError)\r\n            );\r\n    }\r\n}","module.exports = \"<h3 style=\\\"padding-top: 50px\\\">Login </h3>\\n\\n<hr>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-10\\\">\\n    <form (ngSubmit)=\\\"login()\\\" [formGroup]=\\\"userForm\\\">\\n\\n\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errors.length > 0\\\">\\n        <h3 id=\\\"msgRetorno\\\">Opa! Alguma coisa não deu certo:</h3>\\n        <ul>\\n          <li *ngFor=\\\"let error of errors\\\">{{ error }}</li>\\n        </ul>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"Nome\\\">Email</label>\\n        <input formControlName=\\\"email\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"email\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"Nome\\\">Senha</label>\\n        <input formControlName=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-primary\\\">\\n      </div>\\n\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../userService';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n  userForm: FormGroup;\n  user: User;\n  errors: any[] = [];\n\n  constructor(private fb: FormBuilder,\n    private router: Router,\n    private userService: UserService) { }\n\n  ngOnInit() {\n    this.userForm = this.fb.group({\n      email: '',\n      password: ''\n    });\n  }\n\n  login() {\n    if (this.userForm.valid && this.userForm.dirty) {\n\n      let _user = Object.assign({}, this.user, this.userForm.value);\n\n      this.userService.login(_user)\n        .subscribe(\n          result => { this.onSaveComplete(result) },\n          fail => { this.onError(fail) }\n        );\n    }\n  }\n\n  onSaveComplete(response: any) {\n    this.userService.persistirUserApp(response);\n    this.router.navigateByUrl('/lista-produtos');\n  }\n\n  onError(fail: any) {\n    this.errors = fail.error.errors;\n  }\n}\n","module.exports = \"<ul [ngSwitch]=\\\"userLogado()\\\" class=\\\"nav navbar-nav navbar-right\\\">\\n        <li *ngSwitchCase=\\\"false\\\"><a  class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/entrar']\\\">Entrar</a></li>\\n        <li *ngSwitchCase=\\\"true\\\"><a  class=\\\"nav-link text-dark\\\">{{ saudacao }}</a></li>\\n</ul>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../userService';\n\n@Component({\n  selector: 'app-menu-user',\n  templateUrl: './menu.user.component.html'\n})\nexport class MenuUserComponent {\n\n  saudacao: string;\n\n  constructor(private userService: UserService) {  }\n\n  userLogado(): boolean {\n    var user = this.userService.obterUsuario();\n    if (user) {\n      this.saudacao = \"Olá \" + user.email;\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\n\r\nimport { Observable } from \"rxjs\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { User } from './user';\r\nimport { BaseService } from '../base/baseService';\r\n\r\n\r\n@Injectable()\r\nexport class UserService extends BaseService {\r\n\r\n    constructor(private http: HttpClient) { super() }\r\n\r\n    login(user: User): Observable<User> {\r\n\r\n        return this.http\r\n            .post(this.UrlServiceV1 + 'login', user, super.ObterHeaderJson())\r\n            .pipe(\r\n                map(super.extractData),\r\n                catchError(super.serviceError)\r\n            );\r\n    }\r\n\r\n    persistirUserApp(response: any){\r\n        localStorage.setItem('app.token', response.accessToken);\r\n        localStorage.setItem('app.user', JSON.stringify(response.userToken));\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}